{{- $namespace := .Release.Namespace | default .Values.namespace }}
{{- range $key, $svc := .Values.services }}
{{- $mongo := $svc.mongo }}
{{- $name := $mongo.name | default (printf "%s-mongo" $key) }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $name }}-statefulset
  namespace: {{ $namespace }}
  labels:
    app: {{ $name }}
spec:
  serviceName: "{{ $mongo.serviceName }}"
  replicas: {{ $mongo.replicas }}
  selector:
    matchLabels:
      app: {{ $name }}
  template:
    metadata:
      labels:
        app: {{ $name }}
    spec:
      securityContext:
        fsGroup: 999
      initContainers:
        - name: fix-data-permissions
          image: busybox:1.35
          command: ['sh', '-c', 'chown -R 999:999 /data/db']
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
      containers:
        - name: {{ $name }}
          securityContext:
            runAsUser: 999
            runAsGroup: 999
          image: "{{ $mongo.image }}"
          ports:
            - containerPort: {{ $mongo.port }}
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
          livenessProbe:
            exec:
              command: ["mongosh", "--eval", "db.adminCommand('ping')"]
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command: ["mongosh", "--eval", "db.adminCommand('ping')"]
            initialDelaySeconds: 5
            periodSeconds: 10
  volumeClaimTemplates:
    - metadata:
        name: mongo-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ $mongo.storage.size }}
        storageClassName: {{ $mongo.storage.storageClass }}
{{- end }}
