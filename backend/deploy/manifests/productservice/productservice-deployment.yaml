apiVersion: apps/v1
kind: Deployment
metadata:
  name: productservice-deployment
  namespace: deployments
  labels:
    app: productservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: productservice
  template:
    metadata:
      labels:
        app: productservice
    spec:
      serviceAccountName: productservice-sa
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: productservice
              topologyKey: 'kubernetes.io/hostname'
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: 'kubernetes.io/hostname'
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: productservice
      containers:
        - name: server
          image: gcr.io/spheric-temple-451313-b7/products:latest
          ports:
            - containerPort: 50051
          envFrom:
            - secretRef:
                name: authservice-secrets
          resources:
            requests:
              cpu: '250m'
              memory: '256Mi'
            limits:
              cpu: '500m'
              memory: '512Mi'
          readinessProbe:
            httpGet:
              path: /health
              port: 50051
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 50051
            initialDelaySeconds: 30
            periodSeconds: 20
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: productservice-hpa
  namespace: deployments
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: productservice-deployment
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: productservice-sa
  namespace: deployments
rules: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: productservice-role
  namespace: deployments
rules:
  - apiGroups: ['apps']
    resources: ['deployments']
    verbs: ['get', 'list', 'watch', 'create', 'update', 'patch', 'delete']
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: productservice-rolebinding
  namespace: deployments
subjects:
  - kind: ServiceAccount
    name: productservice-sa
    namespace: deployments

roleRef:
  kind: Role
  name: productservice-role
  apiGroup: rbac.authorization.k8s.io
