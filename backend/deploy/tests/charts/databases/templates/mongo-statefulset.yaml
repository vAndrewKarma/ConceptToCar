# templates/mongo-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.mongo.name }}-statefulset
  namespace: {{ .Release.Namespace | default .Values.namespace }}
  labels:
    app: {{ .Values.mongo.name }}
spec:
  serviceName: "{{ .Values.mongo.serviceName }}"
  replicas: {{ .Values.mongo.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.mongo.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.mongo.name }}
    spec:
      securityContext:
        fsGroup: 999  # MongoDB container user's group
      initContainers:
        - name: fix-data-permissions
          image: busybox:1.35
          command: ['sh', '-c', 'chown -R 999:999 /data/db']
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
      containers:
        - name: {{ .Values.mongo.name }}
          securityContext:
            runAsUser: 999
            runAsGroup: 999
          image: "{{ .Values.mongo.image }}"
          ports:
            - containerPort: {{ .Values.mongo.port }}
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
          livenessProbe:
            exec:
              command: ["mongosh", "--eval", "db.adminCommand('ping')"]
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command: ["mongosh", "--eval", "db.adminCommand('ping')"]
            initialDelaySeconds: 5
            periodSeconds: 10
  volumeClaimTemplates:
    - metadata:
        name: mongo-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.mongo.storage.size }}
        storageClassName: {{ .Values.mongo.storage.storageClass }}